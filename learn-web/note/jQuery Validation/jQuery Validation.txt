一.引入需要的js文件
<script type="text/javascript" src="${ctx}/static/jquery/1.11.1/jquery-1.11.1.min.js"></script>
<script type="text/javascript" src="${ctx}/static/jquery/jquery-validation-1.13.0/jquery.validate.min.js"></script>

二、校验规则
1.默认校验规则
  (1)required:true                必输字段
  (2)remote:"check.php"      使用ajax方法调用check.php验证输入值
  (3)email:true                    必须输入正确格式的电子邮件
  (4)url:true                        必须输入正确格式的网址
  (5)date:true                      必须输入正确格式的日期 日期校验ie6出错，慎用
  (6)dateISO:true                必须输入正确格式的日期(ISO)，例如：2009-06-23，1998/01/22 只验证格式，不验证有效性
  (7)number:true                 必须输入合法的数字(负数，小数)
  (8)digits:true                    必须输入整数
  (9)creditcard:                   必须输入合法的信用卡号
  (10)equalTo:"#field"          输入值必须和#field相同
  (11)accept:                       输入拥有合法后缀名的字符串（上传文件的后缀）
  (12)maxlength:5               输入长度最多是5的字符串(汉字算一个字符)
  (13)minlength:10              输入长度最小是10的字符串(汉字算一个字符)
  (14)rangelength:[5,10]      输入长度必须介于 5 和 10 之间的字符串")(汉字算一个字符)
  (15)range:[5,10]               输入值必须介于 5 和 10 之间
  (16)max:5                        输入值不能大于5
  (17)min:10                       输入值不能小于10


2.实际配置例子
$(function () {
        $("#username").focus();

        $("#fm1").validate({rules: {
            username: {
                required: true,
                minlength: 3,
                maxlength: 30
            },
            password: {
                required: true,
                maxlength: 30,
                minlength: 6
            }
        }});
    });

三.修改提示
如果需要汉化提示，可以引入相应的message.js文件
<script type="text/javascript" src="${ctx}/static/jquery/jquery-validation-1.13.0/localization/messages_zh.min.js"></script>


补充：
1.修改验证出错误之后显示标签label修改为其他标签，可以将这段代码放到messages_zh.js,也可以放到$("#fm1").validate();之前调用
$.extend($.validator.defaults, {
    errorElement: "span"
});

2.在提交之前的主动检查
var myform = $("#dialog-confirm").find("form").get(0);
if (!$(myform).validate().form()) {
    return;
}

3.手动触发远程验证
有下面这个验证，会调用远程api，判断是否存在相同loginName，如果存在则不通过
$("#user_form").validate({
    loginName: {
        required: true,
        maxlength: 30,
        minlength: 5,
        remote: {
            type: "POST",
            url: '${ctx}/sys/rbac/user/check-loginname-exists?timestamp=' + new Date().getTime(), /*添加时间戳*/
            dataType: 'json',
            data: {
                loginName: function () {
                    var l_n = $("#loginName").val();
                    return l_n;
                },
                tenantId: function () {
                    var tId = $("#tenantId").val();
                    return tId;
                }
            },
            dataFilter: function (data) {
                console.info("data", data);
                data = eval("(" + data + ")");
                if (data) {
                    if (!data.result) {
                        return true;
                    }
                    return false;
                }
                return false;
            }
        }
    }
}
messages: {
    name: {
        required: '用户名不能为空',
        maxlength: '不能超过{0}个字符',
        minlength: '不能少于{0}个字符'
    }
}
现在想要手动触发远程调用API，需要先清除原来的结果再进行调用
$("#loginName").removeData("previousValue");
$("#user_form").data('validator').element('#loginName');

element方法中可以传入jQuery对象，或jQuery选择器字符串

4.两种方法拿到validator: $("#fm1").validate() 或 $("#fm1").data("validator") ,必须放在方法里，不能提前放到参数中
