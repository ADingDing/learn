<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
    xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:jee="http://www.springframework.org/schema/jee" xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:jpa="http://www.springframework.org/schema/data/jpa"
    xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
        http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd
        http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-4.0.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
        http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd">

    <description>Spring公共配置</description>

    <!-- 使用annotation 自动注册bean,并检查@Required,@Autowired的属性已被注入 -->
    <context:component-scan base-package="com.gqshao.myapp">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller" />
        <context:exclude-filter type="annotation" expression="org.springframework.web.bind.annotation.ControllerAdvice" />
    </context:component-scan>

    <bean id="atomikosUserTransaction" class="com.atomikos.icatch.jta.UserTransactionImp">
        <property name="transactionTimeout" value="300" />
    </bean>

    <bean id="atomikosTransactionManager" class="com.atomikos.icatch.jta.UserTransactionManager" init-method="init"
        destroy-method="close">
        <property name="forceShutdown" value="true" />
        <property name="transactionTimeout" value="300" />
    </bean>

    <!-- 事务管理器配置, JTA数据源事务 -->
    <bean id="transactionManager" class="org.springframework.transaction.jta.JtaTransactionManager">
        <property name="transactionManager" ref="atomikosTransactionManager" />
        <property name="userTransaction" ref="atomikosUserTransaction" />
        <property name="allowCustomIsolationLevels" value="true" />
    </bean>

    <!-- 使用annotation定义事务 -->
    <tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true" />

    <!-- 定义aspectj -->
    <aop:aspectj-autoproxy proxy-target-class="true" />

    <bean id="hibernateJpaVendorAdapter" class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
        <!-- <property name="databasePlatform" value="${oracle.databasePlatform}" /> -->
        <property name="databasePlatform">
            <bean factory-method="getDialect" class="com.gqshao.myapp.common.persistence.Hibernates">
                <constructor-arg ref="dataSource" />
            </bean>
        </property>
        <property name="showSql" value="false" />
        <property name="generateDdl" value="true" />
        <property name="database" value="ORACLE" />
    </bean>

    <!-- Jpa Entity Manager1 配置 -->
    <bean id="entityManagerFactory1" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="persistenceXmlLocation" value="classpath*:/persistence.xml" />
        <property name="persistenceUnitName" value="PU1" />
        <property name="dataSource" ref="dataSource" />
        <property name="jpaVendorAdapter" ref="hibernateJpaVendorAdapter" />
        <property name="packagesToScan" value="com.gqshao.myapp" />
        <property name="jpaProperties">
            <props>
                <!-- 不开启二级缓存 -->
                <prop key="hibernate.cache.use_second_level_cache">false</prop>
                <prop key="hibernate.generate_statistics">false</prop>
                <prop key="hibernate.connection.release_mode">after_statement</prop>
                <!-- 命名规则 My_NAME->MyName -->
                <prop key="hibernate.ejb.naming_strategy">org.hibernate.cfg.ImprovedNamingStrategy</prop>
                <prop key="hibernate.format_sql">true</prop>
                <prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
                <prop key="hibernate.connection.driver_class">${hibernate.connection.driver_class}</prop>
                <prop key="hibernate.current_session_context_class">jta</prop>
                <prop key="hibernate.transaction.manager_lookup_class">com.atomikos.icatch.jta.hibernate3.TransactionManagerLookup</prop>
            </props>
        </property>
    </bean>

    <!-- Spring Data Jpa配置, 扫描base-package下所有继承于Repository<T,ID>的接口 -->
    <jpa:repositories base-package="com.gqshao.myapp.**.dao" transaction-manager-ref="transactionManager"
        entity-manager-factory-ref="entityManagerFactory1" />

    <!-- Jpa Entity Manager2 配置 -->
    <bean id="entityManagerFactory2" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="persistenceXmlLocation" value="classpath*:/persistence.xml" />
        <property name="persistenceUnitName" value="PU2" />
        <property name="dataSource" ref="dataSource2" />
        <property name="jpaVendorAdapter" ref="hibernateJpaVendorAdapter" />
        <property name="packagesToScan" value="com.gqshao.myapp" />
        <property name="jpaProperties">
            <props>
                <!-- 不开启二级缓存 -->
                <prop key="hibernate.cache.use_second_level_cache">false</prop>
                <prop key="hibernate.generate_statistics">false</prop>
                <prop key="hibernate.connection.release_mode">after_statement</prop>
                <!-- 命名规则 My_NAME->MyName -->
                <prop key="hibernate.ejb.naming_strategy">org.hibernate.cfg.ImprovedNamingStrategy</prop>
                <prop key="hibernate.format_sql">true</prop>
                <prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
                <prop key="hibernate.connection.driver_class">${hibernate.connection.driver_class}</prop>
                <prop key="hibernate.current_session_context_class">jta</prop>
                <prop key="hibernate.transaction.manager_lookup_class">com.atomikos.icatch.jta.hibernate3.TransactionManagerLookup</prop>
            </props>
        </property>
    </bean>

    <!-- Spring Data Jpa配置, 扫描base-package下所有继承于Repository<T,ID>的接口 -->
    <jpa:repositories base-package="com.gqshao.myapp.**.repository" transaction-manager-ref="transactionManager"
        entity-manager-factory-ref="entityManagerFactory2" />

    <!-- local development环境 -->
    <beans profile="development">
        <context:property-placeholder location="classpath*:/application-h2.properties"
            ignore-resource-not-found="true" />


        <bean id="dataSource" class="com.gqshao.myapp.common.persistence.MyAtomikosDataSourceBean" init-method="init"
            destroy-method="close">
            <property name="uniqueResourceName" value="XA1DBMS" />
            <property name="xaDataSourceClassName" value="${dev.jdbc.driver}" />
            <property name="xaProperties">
                <props>
                    <prop key="URL">${dev.jdbc.url}</prop>
                    <prop key="user">${dev.jdbc.username}</prop>
                    <prop key="password">${dev.jdbc.password}</prop>
                </props>
            </property>
            <property name="poolSize" value="10" />
            <property name="minPoolSize" value="10" />
            <property name="maxPoolSize" value="30" />
        </bean>

        <bean id="dataSource2" class="com.gqshao.myapp.common.persistence.MyAtomikosDataSourceBean" init-method="init"
            destroy-method="close">
            <property name="uniqueResourceName" value="XA2DBMS" />
            <property name="xaDataSourceClassName" value="${dev.jdbc.driver2}" />
            <property name="xaProperties">
                <props>
                    <prop key="URL">${dev.jdbc.url2}</prop>
                    <prop key="user">${dev.jdbc.username2}</prop>
                    <prop key="password">${dev.jdbc.password2}</prop>
                </props>
            </property>
            <property name="poolSize" value="10" />
            <property name="minPoolSize" value="10" />
            <property name="maxPoolSize" value="30" />
        </bean>
    </beans>
</beans>